{"version":3,"sources":["components/ProductItem.jsx","components/ProductsList.jsx","App.js","serviceWorker.js","index.js"],"names":["ProductItem","data","id","isActive","isDisabled","changeActive","preTitle","subTitle","smSubtitle","descr","weightNum","weightMeasure","boxOutDef","boxOutDefBuy","boxOutDis","boxOutAct","className","onClick","defaultProps","ProductsList","goodsList","showActive","map","key","GOODS_LIST","App","useState","Goods","setGoods","item","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8RAGMA,EAAc,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,aAG9CC,EAUAL,EAVAK,SACAC,EASAN,EATAM,SACAC,EAQAP,EARAO,WACAC,EAOAR,EAPAQ,MACAC,EAMAT,EANAS,UACAC,EAKAV,EALAU,cACAC,EAIAX,EAJAW,UACAC,EAGAZ,EAHAY,aACAC,EAEAb,EAFAa,UACAC,EACAd,EADAc,UAIJ,OACI,yBAAKC,UAAU,QACX,yBAAKA,UAAS,cAASZ,EAAa,UAAYD,EAAW,UAAY,WAAcc,QAAS,WAAMZ,EAAaH,EAAIE,KACjH,yBAAKY,UAAU,YACX,yBAAKA,UAAU,kBAAkBV,GACjC,wBAAIU,UAAU,kBAAkBT,GAChC,yBAAKS,UAAU,iBAAiBR,GAChC,yBAAKQ,UAAU,aAAaP,IAEhC,yBAAKO,UAAU,WACX,yBAAKA,UAAS,qBAAgBZ,EAAY,kBAAoBD,EAAW,kBAAoB,oBAC7F,0BAAMa,UAAU,qBAAqBN,GACrC,0BAAMM,UAAU,uBAAuBL,IAEvC,yBAAKK,UAAU,gBAGtBZ,EAAa,yBAAKY,UAAU,wBAAwBF,GAClDX,EAAW,yBAAKa,UAAU,wBAAwBD,GACvC,yBAAKC,UAAU,wBACZJ,EAAU,0BAAMK,QAAS,WAAKZ,EAAaH,EAAIE,KAAeS,MAe3Fb,EAAYkB,aAAe,CACvBhB,GAAI,EACJC,UAAU,EACVC,YAAY,EACZC,aAAc,aACdC,SAAU,GACVE,WAAY,GACZC,MAAO,GACPC,UAAW,EACXC,cAAe,GACfC,UAAW,GACXC,aAAc,GACdC,UAAW,GACXC,UAAW,IAGAf,QCzCAmB,EAzBM,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,UAAWf,EAA8B,EAA9BA,aAAcgB,EAAgB,EAAhBA,WAG5C,OACI,yBAAKL,UAAU,aACVI,EAAUE,KAAI,gBAAErB,EAAF,EAAEA,KAAME,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAAYF,EAA9B,EAA8BA,GAA9B,OACX,kBAAC,EAAD,CACIqB,IAAKrB,EACLD,KAAMA,EACNC,GAAIA,EACJC,SAAUA,EACVC,WAAYA,EACZC,aAAcA,EACdgB,WAAYA,SCb1BG,EAAa,CACjB,CACEtB,GAAI,EACJC,UAAU,EACVC,YAAY,EACZH,KAAM,CACJK,SAAU,+IACVC,SAAU,6CACVC,WAAY,+CACZC,MAAO,wHACPC,UAAW,MACXC,cAAe,eACfC,UAAW,uIACXC,aAAc,4BACdC,UAAW,+JACXC,UAAW,sPAGf,CACEb,GAAI,EACJC,UAAU,EACVC,YAAY,EACZH,KAAM,CACJK,SAAU,+IACVC,SAAU,6CACVC,WAAY,wCACZC,MAAO,2HACPC,UAAW,IACXC,cAAe,eACfC,UAAW,uIACXC,aAAc,4BACdC,UAAW,wJACXC,UAAW,sPAGf,CACEb,GAAI,EACJC,UAAU,EACVC,YAAY,EACZH,KAAM,CACJK,SAAU,+IACVC,SAAU,6CACVC,WAAY,wCACZC,MAAO,iOACPC,UAAW,IACXC,cAAe,eACfC,UAAW,uIACXC,aAAc,4BACdC,UAAW,wJACXC,UAAW,uPA8BFU,EAzBH,WAAO,IAAD,EACUC,mBAASF,GADnB,mBACTG,EADS,KACFC,EADE,KAgBhB,OACI,yBAAKZ,UAAU,QACb,wBAAIA,UAAU,aAAd,sIACA,kBAAC,EAAD,CAAcX,aAhBC,SAACH,EAAIE,GAErBA,GAEHwB,EAASD,EAAML,KAAI,SAAAO,GACjB,OAAGA,EAAK3B,KAAOA,EACN,2BAAI2B,GAAX,IAAiB1B,UAAW0B,EAAK1B,WAE1B0B,OAQmCT,UAAWO,MCjEzCG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KAAkB,kBAAC,EAAD,OAElBC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c67fd22b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProductItem = ({data, id, isActive, isDisabled, changeActive}) => {\n\n    const { \n        preTitle,\n        subTitle,\n        smSubtitle,\n        descr,\n        weightNum,\n        weightMeasure,\n        boxOutDef,\n        boxOutDefBuy,\n        boxOutDis,\n        boxOutAct,\n    } = data;\n\n\n    return (\n        <div className=\"item\">\n            <div className={`box ${isDisabled ? 'box-dis' : isActive ? 'box-act' : 'box-def'}`}  onClick={()=>{ changeActive(id, isDisabled) }}>\n                <div className=\"box-text\">\n                    <div className=\"box-pre__title\">{preTitle}</div>\n                    <h2 className=\"box-sub__title\">{subTitle}</h2>\n                    <div className=\"box-sm__title\">{smSubtitle}</div>\n                    <div className=\"box-descr\">{descr}</div>\n                </div>\n                <div className=\"box-img\">\n                    <div className={`box-circle ${isDisabled ?'box-circle__dis' : isActive ? 'box-circle__act' : 'box-circle__def'}`}>\n                    <span className=\"box-weight_number\">{weightNum}</span>\n                    <span className=\"box-weight__measure\">{weightMeasure}</span>\n                    </div>\n                    <div className=\"box-image\"></div>\n                </div>\n            </div>\n            {isDisabled ? <div className=\"box-out box-out__dis\">{boxOutDis}</div> : \n               isActive ? <div className=\"box-out box-out__act\">{boxOutAct}</div> :\n                          <div className=\"box-out box-out__def\">\n                            {boxOutDef}<span onClick={()=>{changeActive(id, isDisabled)}}>{boxOutDefBuy}</span>\n                          </div>\n            }\n        </div>\n    );\n}\n\nProductItem.propTypes = {\n    id: PropTypes.number,\n    isActive: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    changeActive: PropTypes.func,\n    data: PropTypes.objectOf(PropTypes.string),\n}\n\nProductItem.defaultProps = {\n    id: 0,\n    isActive: false,\n    isDisabled: false,\n    changeActive: () => {},\n    preTitle: '',\n    smSubtitle: '',\n    descr: '',\n    weightNum: 0,\n    weightMeasure: '',\n    boxOutDef: '',\n    boxOutDefBuy: '',\n    boxOutDis: '',\n    boxOutAct: '',\n}\n\nexport default ProductItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProductItem from './ProductItem';\n\nconst ProductsList = ({goodsList, changeActive, showActive}) => {\n\n    \n    return (\n        <div className=\"container\">\n            {goodsList.map(({data, isActive, isDisabled, id}) => \n                <ProductItem \n                    key={id} \n                    data={data} \n                    id={id} \n                    isActive={isActive} \n                    isDisabled={isDisabled} \n                    changeActive={changeActive} \n                    showActive={showActive}\n                />\n            )}\n        </div>\n    );\n};\n\nProductsList.propTypes = {\n    goodsList: PropTypes.array.isRequired,\n};\n\n\nexport default ProductsList;","import React, { useState }from 'react';\n\nimport ProductsList from './components/ProductsList';\n\nconst GOODS_LIST = [\n  {\n    id: 1,\n    isActive: false,\n    isDisabled: false,\n    data: {\n      preTitle: 'Сказочное заморское яство',\n      subTitle: 'Нямушка',\n      smSubtitle: 'с фуа-гра',\n      descr: '10 порций \\n мышь в подарок',\n      weightNum: '0,5',\n      weightMeasure: 'кг',\n      boxOutDef: 'Чего сидишь? Порадуй котэ, ',\n      boxOutDefBuy: 'купи.',\n      boxOutDis: 'Печалька, с фуа-гра закончился.',\n      boxOutAct: 'Головы щучьи с чесноком да свежайшая семгушка.',\n    }\n  },\n  {\n    id: 2,\n    isActive: false,\n    isDisabled: false,\n    data: {\n      preTitle: 'Сказочное заморское яство',\n      subTitle: 'Нямушка',\n      smSubtitle: 'с рыбой',\n      descr: '40 порций \\n  2 мыши в подарок',\n      weightNum: '2' ,\n      weightMeasure: 'кг',\n      boxOutDef: 'Чего сидишь? Порадуй котэ, ',\n      boxOutDefBuy: 'купи.',\n      boxOutDis: 'Печалька, с рыбой закончился.',\n      boxOutAct: 'Головы щучьи с чесноком да свежайшая семгушка.',\n    }\n  },\n  {\n    id: 3,\n    isActive: false,\n    isDisabled: true,\n    data: {\n      preTitle: 'Сказочное заморское яство',\n      subTitle: 'Нямушка',\n      smSubtitle: 'с курой',\n      descr: ' 100 порций \\n  5 мышей в подарок \\nзаказчик доволен',\n      weightNum: '5',\n      weightMeasure: 'кг',\n      boxOutDef: 'Чего сидишь? Порадуй котэ, ',\n      boxOutDefBuy: 'купи.',\n      boxOutDis: 'Печалька, с курой закончился.',\n      boxOutAct: 'Головы щучьи с чесноком да свежайшая семгушка.',\n    }\n  },\n]\n\nconst App = () => {\n  const [Goods, setGoods] = useState(GOODS_LIST);\n\n  const changeActive = (id, isDisabled) => {\n    // don't choising if disabled\n    if(isDisabled) return;\n\n    setGoods(Goods.map(item => {\n      if(item.id === id ){\n        return {...item, isActive: !item.isActive};\n      }else{\n        return item;\n      }\n    }))\n  }\n\n  return (\n      <div className=\"main\">\n        <h1 className=\"mainTitle\">Ты сегодня покормил кота?</h1>\n        <ProductsList changeActive={changeActive} goodsList={Goods} />\n      </div>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode><App /></React.StrictMode>\n    ,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}